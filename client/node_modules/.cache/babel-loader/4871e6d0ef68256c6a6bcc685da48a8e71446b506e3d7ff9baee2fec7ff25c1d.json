{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import io from'socket.io-client';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const SocketContext=/*#__PURE__*/createContext();export const useSocket=()=>{const context=useContext(SocketContext);if(!context){throw new Error('useSocket must be used within a SocketProvider');}return context;};export const SocketProvider=_ref=>{let{children}=_ref;const[socket,setSocket]=useState(null);const[connected,setConnected]=useState(false);const[onlineUsers,setOnlineUsers]=useState([]);const{user,token}=useAuth();useEffect(()=>{if(user&&token){// Initialize socket connection\nconst SOCKET_URL=process.env.REACT_APP_SOCKET_URL||'http://localhost:8001';const newSocket=io(SOCKET_URL,{auth:{token:token,userId:user.id},transports:['websocket','polling']});// Connection event handlers\nnewSocket.on('connect',()=>{console.log('Connected to server');setConnected(true);// Join user-specific room\nnewSocket.emit('join-room',`user_${user.id}`);// Join family rooms if user is a caregiver\nif(user.role==='caregiver'&&user.familyConnections){user.familyConnections.forEach(connection=>{if(connection.status==='active'){newSocket.emit('join-room',`family_${connection.senior_id}`);}});}});newSocket.on('disconnect',()=>{console.log('Disconnected from server');setConnected(false);});// Message events\nnewSocket.on('new_message',data=>{console.log('New message received:',data);// Trigger notification or update UI\nshowNotification(`New message from ${data.senderName}`,data.messageText);});// Emergency alert events\nnewSocket.on('emergency_notification',data=>{console.log('Emergency alert received:',data);showEmergencyNotification(data);});// Medication reminder events\nnewSocket.on('medication_reminder',data=>{console.log('Medication reminder:',data);showMedicationReminder(data);});// Wellness anomaly alerts\nnewSocket.on('wellness_anomaly_alert',data=>{console.log('Wellness anomaly detected:',data);showWellnessAlert(data);});// Online users updates\nnewSocket.on('online_users_update',users=>{setOnlineUsers(users);});setSocket(newSocket);// Cleanup on unmount\nreturn()=>{newSocket.close();setSocket(null);setConnected(false);};}},[user,token]);// Helper functions for notifications\nconst showNotification=function(title,message){let type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'info';// Create browser notification if permission granted\nif(Notification.permission==='granted'){new Notification(title,{body:message,icon:'/logo192.png',badge:'/logo192.png',tag:'seniorcare-notification'});}// Also show in-app notification\nconsole.log(`${type.toUpperCase()}: ${title} - ${message}`);};const showEmergencyNotification=data=>{// High priority emergency notification\nconst title='ðŸš¨ EMERGENCY ALERT';const message=`${data.seniorName}: ${data.message}`;// Browser notification with high priority\nif(Notification.permission==='granted'){const notification=new Notification(title,{body:message,icon:'/logo192.png',badge:'/logo192.png',tag:'emergency-alert',requireInteraction:true,vibrate:[200,100,200]});// Auto-close after 30 seconds\nsetTimeout(()=>notification.close(),30000);}// Play alert sound if available\ntry{const audio=new Audio('/sounds/emergency-alert.mp3');audio.play().catch(e=>console.log('Could not play alert sound:',e));}catch(e){console.log('Alert sound not available');}console.log('EMERGENCY:',message);};const showMedicationReminder=data=>{const title='ðŸ’Š Medication Reminder';const message=`Time to take ${data.medicationName} (${data.dosage})`;showNotification(title,message,'medication');};const showWellnessAlert=data=>{const title='ðŸ“Š Wellness Alert';const message=`${data.seniorName}: ${data.anomaly.description}`;showNotification(title,message,'wellness');};// Socket event emitters\nconst sendMessage=(recipientId,messageData)=>{if(socket&&connected){socket.emit('send-message',{roomId:`user_${recipientId}`,senderId:user.id,senderName:`${user.firstName} ${user.lastName}`,...messageData});}};const sendEmergencyAlert=alertData=>{if(socket&&connected){socket.emit('emergency-alert',{roomId:`family_${user.id}`,userId:user.id,userName:`${user.firstName} ${user.lastName}`,...alertData});}};const joinRoom=roomId=>{if(socket&&connected){socket.emit('join-room',roomId);}};const leaveRoom=roomId=>{if(socket&&connected){socket.emit('leave-room',roomId);}};// Request notification permission on load\nuseEffect(()=>{if('Notification'in window&&Notification.permission==='default'){Notification.requestPermission().then(permission=>{console.log('Notification permission:',permission);});}},[]);const value={socket,connected,onlineUsers,sendMessage,sendEmergencyAlert,joinRoom,leaveRoom,showNotification,showEmergencyNotification};return/*#__PURE__*/_jsx(SocketContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsx","_jsx","SocketContext","useSocket","context","Error","SocketProvider","_ref","children","socket","setSocket","connected","setConnected","onlineUsers","setOnlineUsers","user","token","SOCKET_URL","process","env","REACT_APP_SOCKET_URL","newSocket","auth","userId","id","transports","on","console","log","emit","role","familyConnections","forEach","connection","status","senior_id","data","showNotification","senderName","messageText","showEmergencyNotification","showMedicationReminder","showWellnessAlert","users","close","title","message","type","arguments","length","undefined","Notification","permission","body","icon","badge","tag","toUpperCase","seniorName","notification","requireInteraction","vibrate","setTimeout","audio","Audio","play","catch","e","medicationName","dosage","anomaly","description","sendMessage","recipientId","messageData","roomId","senderId","firstName","lastName","sendEmergencyAlert","alertData","userName","joinRoom","leaveRoom","window","requestPermission","then","value","Provider"],"sources":["/app/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const { user, token } = useAuth();\n\n  useEffect(() => {\n    if (user && token) {\n      // Initialize socket connection\n      const SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:8001';\n      \n      const newSocket = io(SOCKET_URL, {\n        auth: {\n          token: token,\n          userId: user.id\n        },\n        transports: ['websocket', 'polling']\n      });\n\n      // Connection event handlers\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        setConnected(true);\n        \n        // Join user-specific room\n        newSocket.emit('join-room', `user_${user.id}`);\n        \n        // Join family rooms if user is a caregiver\n        if (user.role === 'caregiver' && user.familyConnections) {\n          user.familyConnections.forEach(connection => {\n            if (connection.status === 'active') {\n              newSocket.emit('join-room', `family_${connection.senior_id}`);\n            }\n          });\n        }\n      });\n\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setConnected(false);\n      });\n\n      // Message events\n      newSocket.on('new_message', (data) => {\n        console.log('New message received:', data);\n        // Trigger notification or update UI\n        showNotification(`New message from ${data.senderName}`, data.messageText);\n      });\n\n      // Emergency alert events\n      newSocket.on('emergency_notification', (data) => {\n        console.log('Emergency alert received:', data);\n        showEmergencyNotification(data);\n      });\n\n      // Medication reminder events\n      newSocket.on('medication_reminder', (data) => {\n        console.log('Medication reminder:', data);\n        showMedicationReminder(data);\n      });\n\n      // Wellness anomaly alerts\n      newSocket.on('wellness_anomaly_alert', (data) => {\n        console.log('Wellness anomaly detected:', data);\n        showWellnessAlert(data);\n      });\n\n      // Online users updates\n      newSocket.on('online_users_update', (users) => {\n        setOnlineUsers(users);\n      });\n\n      setSocket(newSocket);\n\n      // Cleanup on unmount\n      return () => {\n        newSocket.close();\n        setSocket(null);\n        setConnected(false);\n      };\n    }\n  }, [user, token]);\n\n  // Helper functions for notifications\n  const showNotification = (title, message, type = 'info') => {\n    // Create browser notification if permission granted\n    if (Notification.permission === 'granted') {\n      new Notification(title, {\n        body: message,\n        icon: '/logo192.png',\n        badge: '/logo192.png',\n        tag: 'seniorcare-notification'\n      });\n    }\n    \n    // Also show in-app notification\n    console.log(`${type.toUpperCase()}: ${title} - ${message}`);\n  };\n\n  const showEmergencyNotification = (data) => {\n    // High priority emergency notification\n    const title = 'ðŸš¨ EMERGENCY ALERT';\n    const message = `${data.seniorName}: ${data.message}`;\n    \n    // Browser notification with high priority\n    if (Notification.permission === 'granted') {\n      const notification = new Notification(title, {\n        body: message,\n        icon: '/logo192.png',\n        badge: '/logo192.png',\n        tag: 'emergency-alert',\n        requireInteraction: true,\n        vibrate: [200, 100, 200]\n      });\n      \n      // Auto-close after 30 seconds\n      setTimeout(() => notification.close(), 30000);\n    }\n    \n    // Play alert sound if available\n    try {\n      const audio = new Audio('/sounds/emergency-alert.mp3');\n      audio.play().catch(e => console.log('Could not play alert sound:', e));\n    } catch (e) {\n      console.log('Alert sound not available');\n    }\n    \n    console.log('EMERGENCY:', message);\n  };\n\n  const showMedicationReminder = (data) => {\n    const title = 'ðŸ’Š Medication Reminder';\n    const message = `Time to take ${data.medicationName} (${data.dosage})`;\n    \n    showNotification(title, message, 'medication');\n  };\n\n  const showWellnessAlert = (data) => {\n    const title = 'ðŸ“Š Wellness Alert';\n    const message = `${data.seniorName}: ${data.anomaly.description}`;\n    \n    showNotification(title, message, 'wellness');\n  };\n\n  // Socket event emitters\n  const sendMessage = (recipientId, messageData) => {\n    if (socket && connected) {\n      socket.emit('send-message', {\n        roomId: `user_${recipientId}`,\n        senderId: user.id,\n        senderName: `${user.firstName} ${user.lastName}`,\n        ...messageData\n      });\n    }\n  };\n\n  const sendEmergencyAlert = (alertData) => {\n    if (socket && connected) {\n      socket.emit('emergency-alert', {\n        roomId: `family_${user.id}`,\n        userId: user.id,\n        userName: `${user.firstName} ${user.lastName}`,\n        ...alertData\n      });\n    }\n  };\n\n  const joinRoom = (roomId) => {\n    if (socket && connected) {\n      socket.emit('join-room', roomId);\n    }\n  };\n\n  const leaveRoom = (roomId) => {\n    if (socket && connected) {\n      socket.emit('leave-room', roomId);\n    }\n  };\n\n  // Request notification permission on load\n  useEffect(() => {\n    if ('Notification' in window && Notification.permission === 'default') {\n      Notification.requestPermission().then(permission => {\n        console.log('Notification permission:', permission);\n      });\n    }\n  }, []);\n\n  const value = {\n    socket,\n    connected,\n    onlineUsers,\n    sendMessage,\n    sendEmergencyAlert,\n    joinRoom,\n    leaveRoom,\n    showNotification,\n    showEmergencyNotification\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,MAAO,CAAAC,EAAE,KAAM,kBAAkB,CACjC,OAASC,OAAO,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,aAAa,cAAGR,aAAa,CAAC,CAAC,CAErC,MAAO,MAAM,CAAAS,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,OAAO,CAAGT,UAAU,CAACO,aAAa,CAAC,CACzC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,gDAAgD,CAAC,CACnE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACc,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACgB,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAAEkB,IAAI,CAAEC,KAAM,CAAC,CAAGjB,OAAO,CAAC,CAAC,CAEjCH,SAAS,CAAC,IAAM,CACd,GAAImB,IAAI,EAAIC,KAAK,CAAE,CACjB;AACA,KAAM,CAAAC,UAAU,CAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,EAAI,uBAAuB,CAE9E,KAAM,CAAAC,SAAS,CAAGvB,EAAE,CAACmB,UAAU,CAAE,CAC/BK,IAAI,CAAE,CACJN,KAAK,CAAEA,KAAK,CACZO,MAAM,CAAER,IAAI,CAACS,EACf,CAAC,CACDC,UAAU,CAAE,CAAC,WAAW,CAAE,SAAS,CACrC,CAAC,CAAC,CAEF;AACAJ,SAAS,CAACK,EAAE,CAAC,SAAS,CAAE,IAAM,CAC5BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClChB,YAAY,CAAC,IAAI,CAAC,CAElB;AACAS,SAAS,CAACQ,IAAI,CAAC,WAAW,CAAE,QAAQd,IAAI,CAACS,EAAE,EAAE,CAAC,CAE9C;AACA,GAAIT,IAAI,CAACe,IAAI,GAAK,WAAW,EAAIf,IAAI,CAACgB,iBAAiB,CAAE,CACvDhB,IAAI,CAACgB,iBAAiB,CAACC,OAAO,CAACC,UAAU,EAAI,CAC3C,GAAIA,UAAU,CAACC,MAAM,GAAK,QAAQ,CAAE,CAClCb,SAAS,CAACQ,IAAI,CAAC,WAAW,CAAE,UAAUI,UAAU,CAACE,SAAS,EAAE,CAAC,CAC/D,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEFd,SAAS,CAACK,EAAE,CAAC,YAAY,CAAE,IAAM,CAC/BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvChB,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAAC,CAEF;AACAS,SAAS,CAACK,EAAE,CAAC,aAAa,CAAGU,IAAI,EAAK,CACpCT,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEQ,IAAI,CAAC,CAC1C;AACAC,gBAAgB,CAAC,oBAAoBD,IAAI,CAACE,UAAU,EAAE,CAAEF,IAAI,CAACG,WAAW,CAAC,CAC3E,CAAC,CAAC,CAEF;AACAlB,SAAS,CAACK,EAAE,CAAC,wBAAwB,CAAGU,IAAI,EAAK,CAC/CT,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEQ,IAAI,CAAC,CAC9CI,yBAAyB,CAACJ,IAAI,CAAC,CACjC,CAAC,CAAC,CAEF;AACAf,SAAS,CAACK,EAAE,CAAC,qBAAqB,CAAGU,IAAI,EAAK,CAC5CT,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEQ,IAAI,CAAC,CACzCK,sBAAsB,CAACL,IAAI,CAAC,CAC9B,CAAC,CAAC,CAEF;AACAf,SAAS,CAACK,EAAE,CAAC,wBAAwB,CAAGU,IAAI,EAAK,CAC/CT,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEQ,IAAI,CAAC,CAC/CM,iBAAiB,CAACN,IAAI,CAAC,CACzB,CAAC,CAAC,CAEF;AACAf,SAAS,CAACK,EAAE,CAAC,qBAAqB,CAAGiB,KAAK,EAAK,CAC7C7B,cAAc,CAAC6B,KAAK,CAAC,CACvB,CAAC,CAAC,CAEFjC,SAAS,CAACW,SAAS,CAAC,CAEpB;AACA,MAAO,IAAM,CACXA,SAAS,CAACuB,KAAK,CAAC,CAAC,CACjBlC,SAAS,CAAC,IAAI,CAAC,CACfE,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CACH,CACF,CAAC,CAAE,CAACG,IAAI,CAAEC,KAAK,CAAC,CAAC,CAEjB;AACA,KAAM,CAAAqB,gBAAgB,CAAG,QAAAA,CAACQ,KAAK,CAAEC,OAAO,CAAoB,IAAlB,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,MAAM,CACrD;AACA,GAAIG,YAAY,CAACC,UAAU,GAAK,SAAS,CAAE,CACzC,GAAI,CAAAD,YAAY,CAACN,KAAK,CAAE,CACtBQ,IAAI,CAAEP,OAAO,CACbQ,IAAI,CAAE,cAAc,CACpBC,KAAK,CAAE,cAAc,CACrBC,GAAG,CAAE,yBACP,CAAC,CAAC,CACJ,CAEA;AACA7B,OAAO,CAACC,GAAG,CAAC,GAAGmB,IAAI,CAACU,WAAW,CAAC,CAAC,KAAKZ,KAAK,MAAMC,OAAO,EAAE,CAAC,CAC7D,CAAC,CAED,KAAM,CAAAN,yBAAyB,CAAIJ,IAAI,EAAK,CAC1C;AACA,KAAM,CAAAS,KAAK,CAAG,oBAAoB,CAClC,KAAM,CAAAC,OAAO,CAAG,GAAGV,IAAI,CAACsB,UAAU,KAAKtB,IAAI,CAACU,OAAO,EAAE,CAErD;AACA,GAAIK,YAAY,CAACC,UAAU,GAAK,SAAS,CAAE,CACzC,KAAM,CAAAO,YAAY,CAAG,GAAI,CAAAR,YAAY,CAACN,KAAK,CAAE,CAC3CQ,IAAI,CAAEP,OAAO,CACbQ,IAAI,CAAE,cAAc,CACpBC,KAAK,CAAE,cAAc,CACrBC,GAAG,CAAE,iBAAiB,CACtBI,kBAAkB,CAAE,IAAI,CACxBC,OAAO,CAAE,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CACzB,CAAC,CAAC,CAEF;AACAC,UAAU,CAAC,IAAMH,YAAY,CAACf,KAAK,CAAC,CAAC,CAAE,KAAK,CAAC,CAC/C,CAEA;AACA,GAAI,CACF,KAAM,CAAAmB,KAAK,CAAG,GAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CACtDD,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,CAAC,EAAIxC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEuC,CAAC,CAAC,CAAC,CACxE,CAAE,MAAOA,CAAC,CAAE,CACVxC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAC1C,CAEAD,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEkB,OAAO,CAAC,CACpC,CAAC,CAED,KAAM,CAAAL,sBAAsB,CAAIL,IAAI,EAAK,CACvC,KAAM,CAAAS,KAAK,CAAG,wBAAwB,CACtC,KAAM,CAAAC,OAAO,CAAG,gBAAgBV,IAAI,CAACgC,cAAc,KAAKhC,IAAI,CAACiC,MAAM,GAAG,CAEtEhC,gBAAgB,CAACQ,KAAK,CAAEC,OAAO,CAAE,YAAY,CAAC,CAChD,CAAC,CAED,KAAM,CAAAJ,iBAAiB,CAAIN,IAAI,EAAK,CAClC,KAAM,CAAAS,KAAK,CAAG,mBAAmB,CACjC,KAAM,CAAAC,OAAO,CAAG,GAAGV,IAAI,CAACsB,UAAU,KAAKtB,IAAI,CAACkC,OAAO,CAACC,WAAW,EAAE,CAEjElC,gBAAgB,CAACQ,KAAK,CAAEC,OAAO,CAAE,UAAU,CAAC,CAC9C,CAAC,CAED;AACA,KAAM,CAAA0B,WAAW,CAAGA,CAACC,WAAW,CAAEC,WAAW,GAAK,CAChD,GAAIjE,MAAM,EAAIE,SAAS,CAAE,CACvBF,MAAM,CAACoB,IAAI,CAAC,cAAc,CAAE,CAC1B8C,MAAM,CAAE,QAAQF,WAAW,EAAE,CAC7BG,QAAQ,CAAE7D,IAAI,CAACS,EAAE,CACjBc,UAAU,CAAE,GAAGvB,IAAI,CAAC8D,SAAS,IAAI9D,IAAI,CAAC+D,QAAQ,EAAE,CAChD,GAAGJ,WACL,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAAK,kBAAkB,CAAIC,SAAS,EAAK,CACxC,GAAIvE,MAAM,EAAIE,SAAS,CAAE,CACvBF,MAAM,CAACoB,IAAI,CAAC,iBAAiB,CAAE,CAC7B8C,MAAM,CAAE,UAAU5D,IAAI,CAACS,EAAE,EAAE,CAC3BD,MAAM,CAAER,IAAI,CAACS,EAAE,CACfyD,QAAQ,CAAE,GAAGlE,IAAI,CAAC8D,SAAS,IAAI9D,IAAI,CAAC+D,QAAQ,EAAE,CAC9C,GAAGE,SACL,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAAE,QAAQ,CAAIP,MAAM,EAAK,CAC3B,GAAIlE,MAAM,EAAIE,SAAS,CAAE,CACvBF,MAAM,CAACoB,IAAI,CAAC,WAAW,CAAE8C,MAAM,CAAC,CAClC,CACF,CAAC,CAED,KAAM,CAAAQ,SAAS,CAAIR,MAAM,EAAK,CAC5B,GAAIlE,MAAM,EAAIE,SAAS,CAAE,CACvBF,MAAM,CAACoB,IAAI,CAAC,YAAY,CAAE8C,MAAM,CAAC,CACnC,CACF,CAAC,CAED;AACA/E,SAAS,CAAC,IAAM,CACd,GAAI,cAAc,EAAI,CAAAwF,MAAM,EAAIjC,YAAY,CAACC,UAAU,GAAK,SAAS,CAAE,CACrED,YAAY,CAACkC,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAAClC,UAAU,EAAI,CAClDzB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEwB,UAAU,CAAC,CACrD,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAmC,KAAK,CAAG,CACZ9E,MAAM,CACNE,SAAS,CACTE,WAAW,CACX2D,WAAW,CACXO,kBAAkB,CAClBG,QAAQ,CACRC,SAAS,CACT9C,gBAAgB,CAChBG,yBACF,CAAC,CAED,mBACEvC,IAAA,CAACC,aAAa,CAACsF,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAA/E,QAAA,CAClCA,QAAQ,CACa,CAAC,CAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}