{"ast":null,"code":"import{useEffect,useState}from'react';/**\n * Device Detection and Platform Service\n * Determines the best interface for the current device/platform\n */export const DeviceType={MOBILE_PHONE:'mobile_phone',TABLET:'tablet',DESKTOP:'desktop',KIOSK_TABLET:'kiosk_tablet'};export const Platform={WEB:'web',PWA:'pwa',NATIVE_ANDROID:'native_android',NATIVE_IOS:'native_ios',KIOSK:'kiosk'};class DevicePlatformService{constructor(){this.deviceType=this.detectDeviceType();this.platform=this.detectPlatform();this.isKioskMode=this.detectKioskMode();this.capabilities=this.detectCapabilities();}detectDeviceType(){const userAgent=navigator.userAgent;const screenWidth=window.screen.width;const screenHeight=window.screen.height;const pixelRatio=window.devicePixelRatio||1;// Check for tablet first (including iPad)\nconst isTablet=/iPad|Android(?!.*Mobile)|Tablet/i.test(userAgent)||screenWidth>=768&&screenHeight>=1024||screenWidth>=1024&&screenHeight>=768;// Check for mobile phone\nconst isMobile=/Android.*Mobile|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)||screenWidth<768&&!isTablet;if(isTablet){// Check if this might be a kiosk tablet\nconst isLargeTablet=screenWidth>=1024||screenHeight>=1024;const isLandscape=screenWidth>screenHeight;// Heuristics for kiosk mode detection\nif(isLargeTablet&&isLandscape&&this.detectKioskMode()){return DeviceType.KIOSK_TABLET;}return DeviceType.TABLET;}if(isMobile){return DeviceType.MOBILE_PHONE;}return DeviceType.DESKTOP;}detectPlatform(){const userAgent=navigator.userAgent;const urlParams=new URLSearchParams(window.location.search);// Check if launched as PWA\nif(window.matchMedia('(display-mode: standalone)').matches||window.navigator.standalone===true||urlParams.get('source')==='pwa'){return Platform.PWA;}// Check for kiosk mode indicators\nif(this.detectKioskMode()){return Platform.KIOSK;}// Check for native app user agents (for future React Native apps)\nif(userAgent.includes('SeniorCareHub-Android')){return Platform.NATIVE_ANDROID;}if(userAgent.includes('SeniorCareHub-iOS')){return Platform.NATIVE_IOS;}return Platform.WEB;}detectKioskMode(){const urlParams=new URLSearchParams(window.location.search);// Check URL parameters\nif(urlParams.get('kiosk')==='true'||urlParams.get('mode')==='kiosk'||urlParams.get('tablet_mode')==='true'){return true;}// Check localStorage for kiosk preference\nif(localStorage.getItem('seniorcare_kiosk_mode')==='true'){return true;}// Check if launched from tablet launcher\nif(document.referrer.includes('launcher')||navigator.userAgent.includes('SeniorCareHub-Tablet')){return true;}// Check for fullscreen mode (often indicates kiosk)\nif(window.screen.height===window.innerHeight&&window.screen.width===window.innerWidth){return true;}return false;}detectCapabilities(){return{hasCamera:!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia),hasGeolocation:!!navigator.geolocation,hasPushNotifications:'serviceWorker'in navigator&&'PushManager'in window,hasVibration:!!navigator.vibrate,hasBiometrics:!!(navigator.credentials&&navigator.credentials.create),hasVoiceRecognition:!!(window.SpeechRecognition||window.webkitSpeechRecognition),hasDeviceOrientation:!!window.DeviceOrientationEvent,hasInstallPrompt:false,// Will be set when PWA install prompt is available\nisOnline:navigator.onLine,isTouchDevice:'ontouchstart'in window,supportsWebShare:!!navigator.share,supportsPaymentRequest:!!window.PaymentRequest};}// Interface Configuration Methods\ngetUIConfig(){const config={showBottomNavigation:false,showSidebar:false,emergencyButtonPosition:'floating',textSize:'normal',buttonSize:'normal',spacing:'normal',headerStyle:'full'};switch(this.deviceType){case DeviceType.MOBILE_PHONE:return{...config,showBottomNavigation:true,emergencyButtonPosition:'bottom-nav',textSize:'small',buttonSize:'medium',spacing:'compact',headerStyle:'minimal'};case DeviceType.TABLET:return{...config,showSidebar:true,emergencyButtonPosition:'floating',textSize:'medium',buttonSize:'large',spacing:'comfortable'};case DeviceType.KIOSK_TABLET:return{...config,showSidebar:false,emergencyButtonPosition:'always-visible',textSize:'large',buttonSize:'extra-large',spacing:'spacious',headerStyle:'simple',hideComplexFeatures:true,enableVoiceCommands:true,autoLogout:false};case DeviceType.DESKTOP:return{...config,showSidebar:true,emergencyButtonPosition:'sidebar',textSize:'normal',buttonSize:'normal',spacing:'normal'};default:return config;}}// Platform-specific features\ncanInstallPWA(){return this.platform===Platform.WEB&&this.capabilities.hasInstallPrompt;}shouldShowInstallPrompt(){return this.platform===Platform.WEB&&this.deviceType===DeviceType.MOBILE_PHONE&&!this.hasBeenPromptedToInstall();}hasBeenPromptedToInstall(){return localStorage.getItem('pwa_install_prompted')==='true';}markInstallPrompted(){localStorage.setItem('pwa_install_prompted','true');}// Emergency features based on platform\ngetEmergencyFeatures(){const features={canCall911:false,canSendSMS:false,canGetLocation:this.capabilities.hasGeolocation,canVibrate:this.capabilities.hasVibration,canTakePhoto:this.capabilities.hasCamera,canRecordVoice:this.capabilities.hasVoiceRecognition};if(this.platform===Platform.NATIVE_ANDROID||this.platform===Platform.NATIVE_IOS){features.canCall911=true;features.canSendSMS=true;}else if(this.platform===Platform.KIOSK){features.canCall911=true;// Kiosk tablets often have calling capability\n}return features;}// Analytics and tracking\ngetAnalyticsContext(){return{deviceType:this.deviceType,platform:this.platform,isKioskMode:this.isKioskMode,screenSize:`${window.screen.width}x${window.screen.height}`,viewportSize:`${window.innerWidth}x${window.innerHeight}`,pixelRatio:window.devicePixelRatio||1,userAgent:navigator.userAgent,capabilities:this.capabilities};}}// Singleton instance\nconst devicePlatformService=new DevicePlatformService();// React hook for using device/platform detection\nexport const useDevicePlatform=()=>{const[service]=useState(devicePlatformService);const[isOnline,setIsOnline]=useState(navigator.onLine);useEffect(()=>{const handleOnline=()=>setIsOnline(true);const handleOffline=()=>setIsOnline(false);window.addEventListener('online',handleOnline);window.addEventListener('offline',handleOffline);// Listen for PWA install prompt\nconst handleBeforeInstallPrompt=e=>{e.preventDefault();service.capabilities.hasInstallPrompt=true;// Store the event for later use\nwindow.deferredPrompt=e;};window.addEventListener('beforeinstallprompt',handleBeforeInstallPrompt);return()=>{window.removeEventListener('online',handleOnline);window.removeEventListener('offline',handleOffline);window.removeEventListener('beforeinstallprompt',handleBeforeInstallPrompt);};},[service]);return{...service,capabilities:{...service.capabilities,isOnline},uiConfig:service.getUIConfig(),emergencyFeatures:service.getEmergencyFeatures(),analyticsContext:service.getAnalyticsContext()};};// Helper functions for specific platform checks\nexport const isMobilePhone=()=>devicePlatformService.deviceType===DeviceType.MOBILE_PHONE;export const isTablet=()=>devicePlatformService.deviceType===DeviceType.TABLET;export const isKioskTablet=()=>devicePlatformService.deviceType===DeviceType.KIOSK_TABLET;export const isDesktop=()=>devicePlatformService.deviceType===DeviceType.DESKTOP;export const isPWA=()=>devicePlatformService.platform===Platform.PWA;export const isNativeApp=()=>[Platform.NATIVE_ANDROID,Platform.NATIVE_IOS].includes(devicePlatformService.platform);export const isKioskMode=()=>devicePlatformService.platform===Platform.KIOSK||devicePlatformService.isKioskMode;export default devicePlatformService;","map":{"version":3,"names":["useEffect","useState","DeviceType","MOBILE_PHONE","TABLET","DESKTOP","KIOSK_TABLET","Platform","WEB","PWA","NATIVE_ANDROID","NATIVE_IOS","KIOSK","DevicePlatformService","constructor","deviceType","detectDeviceType","platform","detectPlatform","isKioskMode","detectKioskMode","capabilities","detectCapabilities","userAgent","navigator","screenWidth","window","screen","width","screenHeight","height","pixelRatio","devicePixelRatio","isTablet","test","isMobile","isLargeTablet","isLandscape","urlParams","URLSearchParams","location","search","matchMedia","matches","standalone","get","includes","localStorage","getItem","document","referrer","innerHeight","innerWidth","hasCamera","mediaDevices","getUserMedia","hasGeolocation","geolocation","hasPushNotifications","hasVibration","vibrate","hasBiometrics","credentials","create","hasVoiceRecognition","SpeechRecognition","webkitSpeechRecognition","hasDeviceOrientation","DeviceOrientationEvent","hasInstallPrompt","isOnline","onLine","isTouchDevice","supportsWebShare","share","supportsPaymentRequest","PaymentRequest","getUIConfig","config","showBottomNavigation","showSidebar","emergencyButtonPosition","textSize","buttonSize","spacing","headerStyle","hideComplexFeatures","enableVoiceCommands","autoLogout","canInstallPWA","shouldShowInstallPrompt","hasBeenPromptedToInstall","markInstallPrompted","setItem","getEmergencyFeatures","features","canCall911","canSendSMS","canGetLocation","canVibrate","canTakePhoto","canRecordVoice","getAnalyticsContext","screenSize","viewportSize","devicePlatformService","useDevicePlatform","service","setIsOnline","handleOnline","handleOffline","addEventListener","handleBeforeInstallPrompt","e","preventDefault","deferredPrompt","removeEventListener","uiConfig","emergencyFeatures","analyticsContext","isMobilePhone","isKioskTablet","isDesktop","isPWA","isNativeApp"],"sources":["/app/client/src/services/DevicePlatformService.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n/**\n * Device Detection and Platform Service\n * Determines the best interface for the current device/platform\n */\n\nexport const DeviceType = {\n  MOBILE_PHONE: 'mobile_phone',\n  TABLET: 'tablet', \n  DESKTOP: 'desktop',\n  KIOSK_TABLET: 'kiosk_tablet'\n};\n\nexport const Platform = {\n  WEB: 'web',\n  PWA: 'pwa',\n  NATIVE_ANDROID: 'native_android',\n  NATIVE_IOS: 'native_ios',\n  KIOSK: 'kiosk'\n};\n\nclass DevicePlatformService {\n  constructor() {\n    this.deviceType = this.detectDeviceType();\n    this.platform = this.detectPlatform();\n    this.isKioskMode = this.detectKioskMode();\n    this.capabilities = this.detectCapabilities();\n  }\n\n  detectDeviceType() {\n    const userAgent = navigator.userAgent;\n    const screenWidth = window.screen.width;\n    const screenHeight = window.screen.height;\n    const pixelRatio = window.devicePixelRatio || 1;\n\n    // Check for tablet first (including iPad)\n    const isTablet = (\n      /iPad|Android(?!.*Mobile)|Tablet/i.test(userAgent) ||\n      (screenWidth >= 768 && screenHeight >= 1024) ||\n      (screenWidth >= 1024 && screenHeight >= 768)\n    );\n\n    // Check for mobile phone\n    const isMobile = (\n      /Android.*Mobile|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent) ||\n      (screenWidth < 768 && !isTablet)\n    );\n\n    if (isTablet) {\n      // Check if this might be a kiosk tablet\n      const isLargeTablet = (screenWidth >= 1024 || screenHeight >= 1024);\n      const isLandscape = screenWidth > screenHeight;\n      \n      // Heuristics for kiosk mode detection\n      if (isLargeTablet && isLandscape && this.detectKioskMode()) {\n        return DeviceType.KIOSK_TABLET;\n      }\n      return DeviceType.TABLET;\n    }\n\n    if (isMobile) {\n      return DeviceType.MOBILE_PHONE;\n    }\n\n    return DeviceType.DESKTOP;\n  }\n\n  detectPlatform() {\n    const userAgent = navigator.userAgent;\n    const urlParams = new URLSearchParams(window.location.search);\n    \n    // Check if launched as PWA\n    if (window.matchMedia('(display-mode: standalone)').matches || \n        window.navigator.standalone === true ||\n        urlParams.get('source') === 'pwa') {\n      return Platform.PWA;\n    }\n\n    // Check for kiosk mode indicators\n    if (this.detectKioskMode()) {\n      return Platform.KIOSK;\n    }\n\n    // Check for native app user agents (for future React Native apps)\n    if (userAgent.includes('SeniorCareHub-Android')) {\n      return Platform.NATIVE_ANDROID;\n    }\n    \n    if (userAgent.includes('SeniorCareHub-iOS')) {\n      return Platform.NATIVE_IOS;\n    }\n\n    return Platform.WEB;\n  }\n\n  detectKioskMode() {\n    const urlParams = new URLSearchParams(window.location.search);\n    \n    // Check URL parameters\n    if (urlParams.get('kiosk') === 'true' || \n        urlParams.get('mode') === 'kiosk' ||\n        urlParams.get('tablet_mode') === 'true') {\n      return true;\n    }\n\n    // Check localStorage for kiosk preference\n    if (localStorage.getItem('seniorcare_kiosk_mode') === 'true') {\n      return true;\n    }\n\n    // Check if launched from tablet launcher\n    if (document.referrer.includes('launcher') || \n        navigator.userAgent.includes('SeniorCareHub-Tablet')) {\n      return true;\n    }\n\n    // Check for fullscreen mode (often indicates kiosk)\n    if (window.screen.height === window.innerHeight && \n        window.screen.width === window.innerWidth) {\n      return true;\n    }\n\n    return false;\n  }\n\n  detectCapabilities() {\n    return {\n      hasCamera: !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia),\n      hasGeolocation: !!navigator.geolocation,\n      hasPushNotifications: 'serviceWorker' in navigator && 'PushManager' in window,\n      hasVibration: !!navigator.vibrate,\n      hasBiometrics: !!(navigator.credentials && navigator.credentials.create),\n      hasVoiceRecognition: !!(window.SpeechRecognition || window.webkitSpeechRecognition),\n      hasDeviceOrientation: !!window.DeviceOrientationEvent,\n      hasInstallPrompt: false, // Will be set when PWA install prompt is available\n      isOnline: navigator.onLine,\n      isTouchDevice: 'ontouchstart' in window,\n      supportsWebShare: !!navigator.share,\n      supportsPaymentRequest: !!window.PaymentRequest\n    };\n  }\n\n  // Interface Configuration Methods\n  getUIConfig() {\n    const config = {\n      showBottomNavigation: false,\n      showSidebar: false,\n      emergencyButtonPosition: 'floating',\n      textSize: 'normal',\n      buttonSize: 'normal',\n      spacing: 'normal',\n      headerStyle: 'full'\n    };\n\n    switch (this.deviceType) {\n      case DeviceType.MOBILE_PHONE:\n        return {\n          ...config,\n          showBottomNavigation: true,\n          emergencyButtonPosition: 'bottom-nav',\n          textSize: 'small',\n          buttonSize: 'medium',\n          spacing: 'compact',\n          headerStyle: 'minimal'\n        };\n\n      case DeviceType.TABLET:\n        return {\n          ...config,\n          showSidebar: true,\n          emergencyButtonPosition: 'floating',\n          textSize: 'medium',\n          buttonSize: 'large',\n          spacing: 'comfortable'\n        };\n\n      case DeviceType.KIOSK_TABLET:\n        return {\n          ...config,\n          showSidebar: false,\n          emergencyButtonPosition: 'always-visible',\n          textSize: 'large',\n          buttonSize: 'extra-large',\n          spacing: 'spacious',\n          headerStyle: 'simple',\n          hideComplexFeatures: true,\n          enableVoiceCommands: true,\n          autoLogout: false\n        };\n\n      case DeviceType.DESKTOP:\n        return {\n          ...config,\n          showSidebar: true,\n          emergencyButtonPosition: 'sidebar',\n          textSize: 'normal',\n          buttonSize: 'normal',\n          spacing: 'normal'\n        };\n\n      default:\n        return config;\n    }\n  }\n\n  // Platform-specific features\n  canInstallPWA() {\n    return this.platform === Platform.WEB && this.capabilities.hasInstallPrompt;\n  }\n\n  shouldShowInstallPrompt() {\n    return this.platform === Platform.WEB && \n           this.deviceType === DeviceType.MOBILE_PHONE &&\n           !this.hasBeenPromptedToInstall();\n  }\n\n  hasBeenPromptedToInstall() {\n    return localStorage.getItem('pwa_install_prompted') === 'true';\n  }\n\n  markInstallPrompted() {\n    localStorage.setItem('pwa_install_prompted', 'true');\n  }\n\n  // Emergency features based on platform\n  getEmergencyFeatures() {\n    const features = {\n      canCall911: false,\n      canSendSMS: false,\n      canGetLocation: this.capabilities.hasGeolocation,\n      canVibrate: this.capabilities.hasVibration,\n      canTakePhoto: this.capabilities.hasCamera,\n      canRecordVoice: this.capabilities.hasVoiceRecognition\n    };\n\n    if (this.platform === Platform.NATIVE_ANDROID || \n        this.platform === Platform.NATIVE_IOS) {\n      features.canCall911 = true;\n      features.canSendSMS = true;\n    } else if (this.platform === Platform.KIOSK) {\n      features.canCall911 = true; // Kiosk tablets often have calling capability\n    }\n\n    return features;\n  }\n\n  // Analytics and tracking\n  getAnalyticsContext() {\n    return {\n      deviceType: this.deviceType,\n      platform: this.platform,\n      isKioskMode: this.isKioskMode,\n      screenSize: `${window.screen.width}x${window.screen.height}`,\n      viewportSize: `${window.innerWidth}x${window.innerHeight}`,\n      pixelRatio: window.devicePixelRatio || 1,\n      userAgent: navigator.userAgent,\n      capabilities: this.capabilities\n    };\n  }\n}\n\n// Singleton instance\nconst devicePlatformService = new DevicePlatformService();\n\n// React hook for using device/platform detection\nexport const useDevicePlatform = () => {\n  const [service] = useState(devicePlatformService);\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Listen for PWA install prompt\n    const handleBeforeInstallPrompt = (e) => {\n      e.preventDefault();\n      service.capabilities.hasInstallPrompt = true;\n      \n      // Store the event for later use\n      window.deferredPrompt = e;\n    };\n\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n    };\n  }, [service]);\n\n  return {\n    ...service,\n    capabilities: { ...service.capabilities, isOnline },\n    uiConfig: service.getUIConfig(),\n    emergencyFeatures: service.getEmergencyFeatures(),\n    analyticsContext: service.getAnalyticsContext()\n  };\n};\n\n// Helper functions for specific platform checks\nexport const isMobilePhone = () => devicePlatformService.deviceType === DeviceType.MOBILE_PHONE;\nexport const isTablet = () => devicePlatformService.deviceType === DeviceType.TABLET;\nexport const isKioskTablet = () => devicePlatformService.deviceType === DeviceType.KIOSK_TABLET;\nexport const isDesktop = () => devicePlatformService.deviceType === DeviceType.DESKTOP;\n\nexport const isPWA = () => devicePlatformService.platform === Platform.PWA;\nexport const isNativeApp = () => [Platform.NATIVE_ANDROID, Platform.NATIVE_IOS].includes(devicePlatformService.platform);\nexport const isKioskMode = () => devicePlatformService.platform === Platform.KIOSK || devicePlatformService.isKioskMode;\n\nexport default devicePlatformService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}